# Detecting actual CPU count: 8 detected
# JMH version: 1.23
# VM version: JDK 13.0.2, OpenJDK 64-Bit Server VM, 13.0.2+8
# VM invoker: C:\Program Files\Java\openjdk-13.0.2\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.mizosoft.jacksonpatch.asyncnioparser.benchmark.AsyncParserBenchmark_mixedChunks.readChunks
# Parameters: (patch = NIO_WRAPPING, payloadLocation = /payload/jarray_small.json)

# Run progress: 0.00% complete, ETA 00:10:00
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 29677.430 ops/s
# Warmup Iteration   2: 31185.001 ops/s
# Warmup Iteration   3: 31288.133 ops/s
# Warmup Iteration   4: 31283.266 ops/s
# Warmup Iteration   5: 31278.285 ops/s
Iteration   1: 31221.636 ops/s
Iteration   2: 31275.730 ops/s
Iteration   3: 31317.596 ops/s
Iteration   4: 31248.975 ops/s
Iteration   5: 31299.068 ops/s
Iteration   6: 31292.381 ops/s
Iteration   7: 31200.141 ops/s
Iteration   8: 31187.797 ops/s
Iteration   9: 31306.405 ops/s
Iteration  10: 31299.496 ops/s

# Run progress: 12.50% complete, ETA 00:08:49
# Fork: 1 of 1
# Warmup Iteration   1: 28340.906 ops/s
# Warmup Iteration   2: 30733.658 ops/s
# Warmup Iteration   3: 30859.164 ops/s
# Warmup Iteration   4: 30833.318 ops/s
# Warmup Iteration   5: 30846.837 ops/s
Iteration   1: 30857.514 ops/s
Iteration   2: 30888.757 ops/s
Iteration   3: 30845.905 ops/s
Iteration   4: 30839.406 ops/s
Iteration   5: 30856.578 ops/s
Iteration   6: 30883.460 ops/s
Iteration   7: 30863.013 ops/s
Iteration   8: 30854.960 ops/s
Iteration   9: 30877.125 ops/s
Iteration  10: 30865.927 ops/s


Result "com.github.mizosoft.jacksonpatch.asyncnioparser.benchmark.AsyncParserBenchmark_mixedChunks.readChunks":
  30863.264 ±(99.9%) 24.033 ops/s [Average]
  (min, avg, max) = (30839.406, 30863.264, 30888.757), stdev = 15.896
  CI (99.9%): [30839.231, 30887.298] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 13.0.2, OpenJDK 64-Bit Server VM, 13.0.2+8
# VM invoker: C:\Program Files\Java\openjdk-13.0.2\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.mizosoft.jacksonpatch.asyncnioparser.benchmark.AsyncParserBenchmark_mixedChunks.readChunks
# Parameters: (patch = NIO_WRAPPING, payloadLocation = /payload/jobject_large.json)

# Run progress: 25.00% complete, ETA 00:07:33
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 776.201 ops/s
# Warmup Iteration   2: 839.419 ops/s
# Warmup Iteration   3: 840.720 ops/s
# Warmup Iteration   4: 841.110 ops/s
# Warmup Iteration   5: 840.746 ops/s
Iteration   1: 841.287 ops/s
Iteration   2: 840.828 ops/s
Iteration   3: 840.421 ops/s
Iteration   4: 840.965 ops/s
Iteration   5: 840.909 ops/s
Iteration   6: 840.984 ops/s
Iteration   7: 840.996 ops/s
Iteration   8: 840.341 ops/s
Iteration   9: 840.570 ops/s
Iteration  10: 841.095 ops/s

# Run progress: 37.50% complete, ETA 00:06:18
# Fork: 1 of 1
# Warmup Iteration   1: 620.600 ops/s
# Warmup Iteration   2: 812.040 ops/s
# Warmup Iteration   3: 813.662 ops/s
# Warmup Iteration   4: 814.056 ops/s
# Warmup Iteration   5: 813.258 ops/s
Iteration   1: 813.732 ops/s
Iteration   2: 812.913 ops/s
Iteration   3: 813.183 ops/s
Iteration   4: 813.175 ops/s
Iteration   5: 812.856 ops/s
Iteration   6: 812.744 ops/s
Iteration   7: 813.383 ops/s
Iteration   8: 812.701 ops/s
Iteration   9: 813.527 ops/s
Iteration  10: 813.408 ops/s


Result "com.github.mizosoft.jacksonpatch.asyncnioparser.benchmark.AsyncParserBenchmark_mixedChunks.readChunks":
  813.162 ±(99.9%) 0.531 ops/s [Average]
  (min, avg, max) = (812.701, 813.162, 813.732), stdev = 0.351
  CI (99.9%): [812.631, 813.693] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 13.0.2, OpenJDK 64-Bit Server VM, 13.0.2+8
# VM invoker: C:\Program Files\Java\openjdk-13.0.2\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.mizosoft.jacksonpatch.asyncnioparser.benchmark.AsyncParserBenchmark_mixedChunks.readChunks
# Parameters: (patch = TOGGLING, payloadLocation = /payload/jarray_small.json)

# Run progress: 50.00% complete, ETA 00:05:02
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 24346.679 ops/s
# Warmup Iteration   2: 28532.728 ops/s
# Warmup Iteration   3: 28257.590 ops/s
# Warmup Iteration   4: 28250.201 ops/s
# Warmup Iteration   5: 28230.144 ops/s
Iteration   1: 28195.005 ops/s
Iteration   2: 28118.519 ops/s
Iteration   3: 28210.558 ops/s
Iteration   4: 28232.493 ops/s
Iteration   5: 27392.653 ops/s
Iteration   6: 28110.644 ops/s
Iteration   7: 27800.531 ops/s
Iteration   8: 28112.683 ops/s
Iteration   9: 27552.327 ops/s
Iteration  10: 27677.492 ops/s

# Run progress: 62.50% complete, ETA 00:03:47
# Fork: 1 of 1
# Warmup Iteration   1: 24314.554 ops/s
# Warmup Iteration   2: 27522.237 ops/s
# Warmup Iteration   3: 27746.435 ops/s
# Warmup Iteration   4: 27768.314 ops/s
# Warmup Iteration   5: 27597.311 ops/s
Iteration   1: 27859.615 ops/s
Iteration   2: 27837.295 ops/s
Iteration   3: 27656.900 ops/s
Iteration   4: 27966.808 ops/s
Iteration   5: 27497.333 ops/s
Iteration   6: 27627.240 ops/s
Iteration   7: 27724.766 ops/s
Iteration   8: 27859.697 ops/s
Iteration   9: 27522.636 ops/s
Iteration  10: 27574.139 ops/s


Result "com.github.mizosoft.jacksonpatch.asyncnioparser.benchmark.AsyncParserBenchmark_mixedChunks.readChunks":
  27712.643 ±(99.9%) 244.589 ops/s [Average]
  (min, avg, max) = (27497.333, 27712.643, 27966.808), stdev = 161.780
  CI (99.9%): [27468.054, 27957.232] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 13.0.2, OpenJDK 64-Bit Server VM, 13.0.2+8
# VM invoker: C:\Program Files\Java\openjdk-13.0.2\bin\java.exe
# VM options: <none>
# Warmup: 5 iterations, 5 s each
# Measurement: 10 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.mizosoft.jacksonpatch.asyncnioparser.benchmark.AsyncParserBenchmark_mixedChunks.readChunks
# Parameters: (patch = TOGGLING, payloadLocation = /payload/jobject_large.json)

# Run progress: 75.00% complete, ETA 00:02:31
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 581.812 ops/s
# Warmup Iteration   2: 765.008 ops/s
# Warmup Iteration   3: 765.361 ops/s
# Warmup Iteration   4: 764.574 ops/s
# Warmup Iteration   5: 764.779 ops/s
Iteration   1: 765.712 ops/s
Iteration   2: 765.482 ops/s
Iteration   3: 764.829 ops/s
Iteration   4: 765.683 ops/s
Iteration   5: 765.695 ops/s
Iteration   6: 766.307 ops/s
Iteration   7: 765.327 ops/s
Iteration   8: 766.375 ops/s
Iteration   9: 765.207 ops/s
Iteration  10: 765.301 ops/s

# Run progress: 87.50% complete, ETA 00:01:15
# Fork: 1 of 1
# Warmup Iteration   1: 648.903 ops/s
# Warmup Iteration   2: 780.032 ops/s
# Warmup Iteration   3: 781.856 ops/s
# Warmup Iteration   4: 780.417 ops/s
# Warmup Iteration   5: 780.757 ops/s
Iteration   1: 781.624 ops/s
Iteration   2: 780.787 ops/s
Iteration   3: 781.329 ops/s
Iteration   4: 773.720 ops/s
Iteration   5: 777.626 ops/s
Iteration   6: 753.772 ops/s
Iteration   7: 778.362 ops/s
Iteration   8: 752.018 ops/s
Iteration   9: 780.794 ops/s
Iteration  10: 768.837 ops/s


Result "com.github.mizosoft.jacksonpatch.asyncnioparser.benchmark.AsyncParserBenchmark_mixedChunks.readChunks":
  772.887 ±(99.9%) 17.037 ops/s [Average]
  (min, avg, max) = (752.018, 772.887, 781.624), stdev = 11.269
  CI (99.9%): [755.849, 789.924] (assumes normal distribution)


# Run complete. Total time: 00:10:06

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                         (patch)            (payloadLocation)   Mode  Cnt      Score     Error  Units
AsyncParserBenchmark_mixedChunks.readChunks  NIO_WRAPPING   /payload/jarray_small.json  thrpt   10  30863.264 ±  24.033  ops/s
AsyncParserBenchmark_mixedChunks.readChunks  NIO_WRAPPING  /payload/jobject_large.json  thrpt   10    813.162 ±   0.531  ops/s
AsyncParserBenchmark_mixedChunks.readChunks      TOGGLING   /payload/jarray_small.json  thrpt   10  27712.643 ± 244.589  ops/s
AsyncParserBenchmark_mixedChunks.readChunks      TOGGLING  /payload/jobject_large.json  thrpt   10    772.887 ±  17.037  ops/s