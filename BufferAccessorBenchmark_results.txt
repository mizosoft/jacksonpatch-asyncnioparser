# Detecting actual CPU count: 8 detected
# JMH version: 1.23
# VM version: JDK 13.0.2, OpenJDK 64-Bit Server VM, 13.0.2+8
# VM invoker: C:\Program Files\Java\openjdk-13.0.2\bin\java.exe
# VM options: <none>
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.mizosoft.jacksonpatch.asyncnioparser.benchmark.BufferAccessorBenchmark.byteArray

# Run progress: 0.00% complete, ETA 00:01:45
# Fork: 1 of 1
# Warmup Iteration   1: 1423.488 ops/us
# Warmup Iteration   2: 1428.252 ops/us
Iteration   1: 1669.018 ops/us
Iteration   2: 1676.145 ops/us
Iteration   3: 1673.753 ops/us
Iteration   4: 1675.392 ops/us
Iteration   5: 1673.158 ops/us


Result "com.github.mizosoft.jacksonpatch.asyncnioparser.benchmark.BufferAccessorBenchmark.byteArray":
  1673.493 ±(99.9%) 10.693 ops/us [Average]
  (min, avg, max) = (1669.018, 1673.493, 1676.145), stdev = 2.777
  CI (99.9%): [1662.800, 1684.187] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 13.0.2, OpenJDK 64-Bit Server VM, 13.0.2+8
# VM invoker: C:\Program Files\Java\openjdk-13.0.2\bin\java.exe
# VM options: <none>
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.mizosoft.jacksonpatch.asyncnioparser.benchmark.BufferAccessorBenchmark.directNioBuffer

# Run progress: 33.33% complete, ETA 00:01:10
# Fork: 1 of 1
# Warmup Iteration   1: 1098.806 ops/us
# Warmup Iteration   2: 1096.301 ops/us
Iteration   1: 1210.875 ops/us
Iteration   2: 1208.492 ops/us
Iteration   3: 1209.105 ops/us
Iteration   4: 1208.690 ops/us
Iteration   5: 1207.287 ops/us


Result "com.github.mizosoft.jacksonpatch.asyncnioparser.benchmark.BufferAccessorBenchmark.directNioBuffer":
  1208.890 ±(99.9%) 5.003 ops/us [Average]
  (min, avg, max) = (1207.287, 1208.890, 1210.875), stdev = 1.299
  CI (99.9%): [1203.886, 1213.893] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 13.0.2, OpenJDK 64-Bit Server VM, 13.0.2+8
# VM invoker: C:\Program Files\Java\openjdk-13.0.2\bin\java.exe
# VM options: <none>
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.mizosoft.jacksonpatch.asyncnioparser.benchmark.BufferAccessorBenchmark.nioBuffer

# Run progress: 66.67% complete, ETA 00:00:35
# Fork: 1 of 1
# Warmup Iteration   1: 1097.754 ops/us
# Warmup Iteration   2: 1092.023 ops/us
Iteration   1: 1205.276 ops/us
Iteration   2: 1209.744 ops/us
Iteration   3: 1209.511 ops/us
Iteration   4: 1207.006 ops/us
Iteration   5: 1208.241 ops/us


Result "com.github.mizosoft.jacksonpatch.asyncnioparser.benchmark.BufferAccessorBenchmark.nioBuffer":
  1207.956 ±(99.9%) 7.147 ops/us [Average]
  (min, avg, max) = (1205.276, 1207.956, 1209.744), stdev = 1.856
  CI (99.9%): [1200.809, 1215.103] (assumes normal distribution)


# Run complete. Total time: 00:01:46

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                 Mode  Cnt     Score    Error   Units
BufferAccessorBenchmark.byteArray        thrpt    5  1673.493 ± 10.693  ops/us
BufferAccessorBenchmark.directNioBuffer  thrpt    5  1208.890 ±  5.003  ops/us
BufferAccessorBenchmark.nioBuffer        thrpt    5  1207.956 ±  7.147  ops/us